#= require gmaps
#= require oms
#= require geolocationmarker
#= require jquery.typewatch
#= require add2home

window.console and window.console.info('O, Å¾ivjo, kaj pa ti tukaj? Source in API info sta na voljo na https://github.com/mrfoto/bonar ;)')

$ ->
  restaurants = filteredRestaurants = filteredIDs = features = search = featureToggle = isMobile = latestMarker = geoMarker = request  = fitMarkersTimer = horizontalScrollTimer = null

  getMarkerIcon = (image) ->
    {url: image, scaledSize: new google.maps.Size(18,31)}

  displayRestaurants = ->
    if !restaurants?.length then return
    map.removeMarkers()
    filteredRestaurants = if filteredIDs then restaurants.filter (restaurant) -> restaurant['id'] in filteredIDs else restaurants
    for restaurant in filteredRestaurants
      marker = map.addMarker
        lat: restaurant['coordinates'][0]
        lng: restaurant['coordinates'][1]
        details: restaurant['id']
        icon: scaleMarkers[restaurant['price'][0]]
        shadow: {url: '<%= asset_path("markers/shadow.png") %>', origin: new google.maps.Point(9,34), scaledSize: new google.maps.Size(31,34)}
      oms.addMarker marker
    fitMarkers()
    if filteredRestaurants.length == 1 then google.maps.event.trigger(marker, 'click')

  fitMarkers = ->
    clearTimeout fitMarkersTimer
    if $('#adapt-bounds').is(':checked') and filteredRestaurants.length and !(isMobile and filteredRestaurants.length > 200)
      fitMarkersTimer = setTimeout(->
          map.fitZoom()
        , 300)

  searchForRestaurants = ->
    if request? then request.abort()
    if search?.length or features?.length
      request = $.getJSON '/search',
        search: search
        features: features
      , (data) ->
        filteredIDs = data
        displayRestaurants()
    else
      filteredIDs = null
      displayRestaurants()

  addControlToMap = (id, postion, content) ->
    map.addControl
      id: id
      position: postion
      content: content
      style:
        'font-size': '15px'
        margin: '5px'
        padding: '4px 6px'
        border: 'solid 1px #717B87'
        background: '#fff'

  showGeoMarker = ->
    geoMarker = new GeolocationMarker map.map
    geoMarker.setMinimumAccuracy 100
    google.maps.event.addListenerOnce geoMarker, 'position_changed', ->
      addControlToMap('geo-marker', 'top_right', 'Kje sem?')
      if isMobile
        map.panTo geoMarker.getPosition()
        map.setZoom 16

  showFeatureToggle = ->
    if isMobile
      if !featureToggle?
        $('#adapt-bounds').prop('checked', false)
        featureToggle = addControlToMap('feature-toggle', 'top_left', 'Iskalnik')
      $(featureToggle).show()
    else if featureToggle?
      $(featureToggle).hide()
      $(featureToggle).text('Iskalnik')
      $('body').removeClass('active-nav')
    map.refresh()

  isMobile = $(window).width() < 768

  map = new GMaps
    div: '#map'
    lat: 46.119944
    lng: 14.815333
    zoom: 8
    minZoom: 6
    disableDefaultUI: true

  oms = new OverlappingMarkerSpiderfier(map.map,
    keepSpiderfied: true
    markersWontMove: true
    markersWontHide: true
  )

  iw = new google.maps.InfoWindow()
  oms.addListener 'click', (marker) ->
    $.get '/content',
      restaurant: marker['details']
    , ((data) ->
      iw.setContent data
      latestMarker = marker
      iw.open map.map, latestMarker
    ), 'html'

  scaleMarkers = [getMarkerIcon('<%= asset_path("markers/ffe7c8.png") %>'), getMarkerIcon('<%= asset_path("markers/ffcc95.png") %>'), getMarkerIcon('<%= asset_path("markers/ffad60.png") %>'), getMarkerIcon('<%= asset_path("markers/ff8c1f.png") %>'), getMarkerIcon('<%= asset_path("markers/e04f00.png") %>')]

  $.getJSON '/all_restaurants', (data) ->
    restaurants = data
    displayRestaurants()
    showFeatureToggle()
    $('body').addClass('transitions');

  if navigator.geolocation then showGeoMarker()

  # Events

  $('#map').on 'click', '.load-menu', (event) ->
    event.preventDefault()
    $this = $(this)
    $.get '/menu',
      restaurant: latestMarker['details']
    , ((data) ->
      $this.replaceWith data
      iw.setContent $('.prehrana-info').parent()[0]
      iw.open map.map, latestMarker
    ), 'html'

  $('#map').on 'click', '#geo-marker', () ->
    $('#adapt-bounds').prop('checked', false)
    map.panTo geoMarker.getPosition()
    if map.getZoom() < 16 then map.setZoom 16

  $('#map').on 'click', '#feature-toggle', () ->
    if $('body').hasClass('active-nav')
      $('body').removeClass('active-nav')
      $(featureToggle).text('Iskalnik')
    else
      $('body').addClass('active-nav')
      $(featureToggle).text('Skrij iskalnik')

  $('#restaurant-search').typeWatch
    callback: (val) ->
      if val != search
        search = val
        searchForRestaurants()
    captureLength: 0

  $('#filter li').on 'click', (event) ->
    if event.target == this
      $(this).find('input').click()

  $('.feature-filter').on 'change', () ->
    features = []
    $('.feature-filter').each ->
      if $(this).is(':checked') then features.push $(this).data('feature-id')
    if features.length
      $('#all-switch').prop('checked', false).prop('disabled', false)
    else
      $('#all-switch').prop('checked', true).prop('disabled', true)
    searchForRestaurants()

  $('#all-switch').on 'change', () ->
    $this = $(this)
    if $this.is(':checked')
      features = []
      $this.prop('disabled', true)
      $('.feature-filter').each ->
        $(this).prop('checked', false)
    searchForRestaurants()

  $('#adapt-bounds').on 'change', () ->
    $this = $(this)
    if $this.is(':checked')
      fitMarkers()

  $(document).scroll ->
    if $(document).scrollLeft() > 100 and $('body').hasClass('active-nav')
      $(document).scrollLeft(0)
      $(featureToggle).click()

  $(window).resize ->
    isMobile = $(window).width() < 768
    showFeatureToggle()
    fitMarkers()
